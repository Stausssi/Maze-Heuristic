var = {'minkowski': (8.102564102564102, 1.6669365503485696, 2128.974358974359, 2697.8826930837868),
       'minkowski_int': (8.051282051282051, 1.7910408316001172, 2945.230769230769, 3745.6327092645574),
       'euclid': (8.102564102564102, 1.6669365503485696, 2056.7179487179487, 2666.628602292434),
       'euclid_int': (8.025641025641026, 1.724241701935566, 2445.641025641026, 3052.1774064391916),
       'manhattan': (8.564102564102564, 1.6510741606422834, 3842.6923076923076, 5593.200190992471),
       'chebyshev': (8.051282051282051, 1.7614096918559585, 2462.3846153846152, 3173.3914169261),
       'shortest_distance': (7.3076923076923075, 1.489504441678969, 2027.7948717948718, 2908.304816243224),
       'shortest_distance_int': (7.333333333333333, 1.4749368110164003, 2369.0, 3567.3240745174216),
       'min_shortest_distance': (7.333333333333333, 1.4749368110164003, 2369.0, 3567.3240745174216),
       'sum_shortest_distance': (8.256410256410257, 1.8312772177671763, 639.4871794871794, 1063.7237193684732),
       'sum_shortest_distance_0.1_0.9': (7.3076923076923075, 1.489504441678969, 1415.0, 2168.6561810436774),
       'sum_shortest_distance_0.2_0.8': (7.3076923076923075, 1.489504441678969, 1237.8974358974358, 1888.299064667679),
       'sum_shortest_distance_0.3_0.7': (7.3076923076923075, 1.489504441678969, 1019.7179487179487, 1435.6184977162823),
       'sum_shortest_distance_0.4_0.6': (7.3076923076923075, 1.489504441678969, 1030.820512820513, 1348.5913093180422),
       'sum_shortest_distance_0.5_0.5': (7.564102564102564, 1.5525000516123695, 1105.4871794871794, 1561.0069602966114),
       'sum_shortest_distance_0.6_0.4': (7.615384615384615, 1.5151061212682275, 1143.7692307692307, 1611.4100798195752),
       'sum_shortest_distance_0.7_0.3': (
       7.6923076923076925, 1.591983968344401, 1220.3846153846155, 1832.810433465568),
       'sum_shortest_distance_0.8_0.2': (
       7.769230769230769, 1.5804985632711042, 1292.5641025641025, 1722.9464480615727),
       'sum_shortest_distance_0.9_0.1': (
       7.923076923076923, 1.6445222532077657, 1658.820512820513, 2285.5006922565117),
       'sum_shortest_distance_int_0.1_0.9': (
       7.333333333333333, 1.4749368110164003, 2316.3846153846152, 3373.0252438347625),
       'sum_shortest_distance_int_0.2_0.8': (
       7.333333333333333, 1.4749368110164003, 2126.5897435897436, 3026.7678672136885),
       'sum_shortest_distance_int_0.3_0.7': (
       7.333333333333333, 1.4749368110164003, 1590.5128205128206, 2032.878162810381),
       'sum_shortest_distance_int_0.4_0.6': (
       7.358974358974359, 1.4776791811767298, 1321.923076923077, 1783.451597097685),
       'sum_shortest_distance_int_0.5_0.5': (
       7.615384615384615, 1.5151061212682275, 1710.076923076923, 2740.911914948394),
       'sum_shortest_distance_int_0.6_0.4': (
       7.564102564102564, 1.5354559034075326, 1431.7948717948718, 2113.2586109643835),
       'sum_shortest_distance_int_0.7_0.3': (
       7.717948717948718, 1.588589542374949, 1458.3589743589744, 1998.5013659869117),
       'sum_shortest_distance_int_0.8_0.2': (
       7.82051282051282, 1.5873147612074607, 1754.923076923077, 1988.9194287167907),
       'sum_shortest_distance_int_0.9_0.1': (
       7.846153846153846, 1.6469822729123254, 1884.1025641025642, 2212.2341385894533)}

if __name__ == "__main__":

    import pandas as pd
    import openpyxl

    data = []
    for key, value in var.items():
        rounded_tuple = tuple(round(x, 3) for x in value)
        data.append((key, *rounded_tuple))

    measurements = pd.DataFrame(data,
                                columns=['HEURISTIC', 'AVG Turns', 'STD.DEV. TURNS', 'AVG. OPEN', 'STD.DEV. OPEN'])

    measurements.to_excel("Results_2.xlsx")